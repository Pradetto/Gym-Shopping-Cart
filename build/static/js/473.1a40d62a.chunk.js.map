{"version":3,"file":"static/js/473.1a40d62a.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/visually-hidden/dist/index.esm.js","../node_modules/@zag-js/focus-visible/src/index.ts","../node_modules/@chakra-ui/checkbox/dist/index.esm.js","../node_modules/@chakra-ui/react-use-controllable-state/dist/index.esm.js"],"sourcesContent":["// ../../../react-shim.js\nimport React from \"react\";\n\n// src/visually-hidden.tsx\nimport { chakra } from \"@chakra-ui/system\";\n\n// src/visually-hidden.style.ts\nvar visuallyHiddenStyle = {\n  border: \"0px\",\n  clip: \"rect(0px, 0px, 0px, 0px)\",\n  height: \"1px\",\n  width: \"1px\",\n  margin: \"-1px\",\n  padding: \"0px\",\n  overflow: \"hidden\",\n  whiteSpace: \"nowrap\",\n  position: \"absolute\"\n};\n\n// src/visually-hidden.tsx\nvar VisuallyHidden = chakra(\"span\", {\n  baseStyle: visuallyHiddenStyle\n});\nVisuallyHidden.displayName = \"VisuallyHidden\";\nvar VisuallyHiddenInput = chakra(\"input\", {\n  baseStyle: visuallyHiddenStyle\n});\nVisuallyHiddenInput.displayName = \"VisuallyHiddenInput\";\nvar visually_hidden_default = VisuallyHidden;\nexport {\n  VisuallyHidden,\n  VisuallyHiddenInput,\n  visually_hidden_default as default,\n  visuallyHiddenStyle\n};\n","type Modality = \"keyboard\" | \"pointer\"\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent\ntype Handler = (modality: Modality, e: HandlerEvent) => void\ntype FocusVisibleCallback = (isFocusVisible: boolean) => void\n\nlet hasSetup = false\nlet modality: Modality | null = null\nlet hasEventBeforeFocus = false\n\nconst handlers = new Set<Handler>()\n\nconst isMac = typeof window !== \"undefined\" && window.navigator != null ? /^Mac/.test(window.navigator.platform) : false\n\nfunction isValidKey(event: KeyboardEvent) {\n  return !(event.metaKey || (!isMac && event.altKey) || event.ctrlKey)\n}\n\nfunction trigger(modality: Modality, event: HandlerEvent) {\n  handlers.forEach((handler) => handler(modality, event))\n}\n\nfunction onKeyboardEvent(event: KeyboardEvent) {\n  hasEventBeforeFocus = true\n  if (isValidKey(event)) {\n    modality = \"keyboard\"\n    trigger(\"keyboard\", event)\n  }\n}\n\nfunction onPointerEvent(event: PointerEvent | MouseEvent) {\n  modality = \"pointer\"\n  if (event.type === \"mousedown\" || event.type === \"pointerdown\") {\n    hasEventBeforeFocus = true\n    trigger(\"pointer\", event)\n  }\n}\n\nfunction onWindowFocus(event: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (event.target === window || event.target === document) {\n    return\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to keyboard modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus) {\n    modality = \"keyboard\"\n    trigger(\"keyboard\", event)\n  }\n\n  hasEventBeforeFocus = false\n}\n\nfunction onWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false\n}\n\nfunction isFocusVisible() {\n  return modality !== \"pointer\"\n}\n\nfunction setupGlobalFocusEvents() {\n  if (typeof window === \"undefined\" || hasSetup) {\n    return\n  }\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  const { focus } = HTMLElement.prototype\n  HTMLElement.prototype.focus = function focusElement(...args) {\n    hasEventBeforeFocus = true\n    focus.apply(this, args)\n  }\n\n  document.addEventListener(\"keydown\", onKeyboardEvent, true)\n  document.addEventListener(\"keyup\", onKeyboardEvent, true)\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  window.addEventListener(\"focus\", onWindowFocus, true)\n  window.addEventListener(\"blur\", onWindowBlur, false)\n\n  if (typeof PointerEvent !== \"undefined\") {\n    document.addEventListener(\"pointerdown\", onPointerEvent, true)\n    document.addEventListener(\"pointermove\", onPointerEvent, true)\n    document.addEventListener(\"pointerup\", onPointerEvent, true)\n  } else {\n    document.addEventListener(\"mousedown\", onPointerEvent, true)\n    document.addEventListener(\"mousemove\", onPointerEvent, true)\n    document.addEventListener(\"mouseup\", onPointerEvent, true)\n  }\n\n  hasSetup = true\n}\n\nexport function trackFocusVisible(fn: FocusVisibleCallback) {\n  setupGlobalFocusEvents()\n\n  fn(isFocusVisible())\n  const handler = () => fn(isFocusVisible())\n\n  handlers.add(handler)\n  return () => {\n    handlers.delete(handler)\n  }\n}\n","// ../../../react-shim.js\nimport React from \"react\";\n\n// src/checkbox-group.tsx\nimport { useMemo } from \"react\";\n\n// src/checkbox-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [CheckboxGroupProvider, useCheckboxGroupContext] = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n});\n\n// src/use-checkbox-group.ts\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nfunction isObject(value) {\n  const type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\") && !Array.isArray(value);\n}\nvar dataAttr = (condition) => condition ? \"\" : void 0;\nfunction callAllHandlers(...fns) {\n  return function func(event) {\n    fns.some((fn) => {\n      fn == null ? void 0 : fn(event);\n      return event == null ? void 0 : event.defaultPrevented;\n    });\n  };\n}\nfunction callAll(...fns) {\n  return function mergedFn(arg) {\n    fns.forEach((fn) => {\n      fn == null ? void 0 : fn(arg);\n    });\n  };\n}\n\n// src/use-checkbox-group.ts\nimport { useCallback } from \"react\";\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\nfunction useCheckboxGroup(props = {}) {\n  const {\n    defaultValue,\n    value: valueProp,\n    onChange,\n    isDisabled,\n    isNative\n  } = props;\n  const onChangeProp = useCallbackRef(onChange);\n  const [value, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  });\n  const handleChange = useCallback((eventOrValue) => {\n    if (!value)\n      return;\n    const isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n    const selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n    const nextValue = isChecked ? [...value, selectedValue] : value.filter((v) => String(v) !== String(selectedValue));\n    setValue(nextValue);\n  }, [setValue, value]);\n  const getCheckboxProps = useCallback((props2 = {}) => {\n    const checkedKey = isNative ? \"checked\" : \"isChecked\";\n    return {\n      ...props2,\n      [checkedKey]: value.some((val) => String(props2.value) === String(val)),\n      onChange: handleChange\n    };\n  }, [handleChange, isNative, value]);\n  return {\n    value,\n    isDisabled,\n    onChange: handleChange,\n    setValue,\n    getCheckboxProps\n  };\n}\n\n// src/checkbox-group.tsx\nfunction CheckboxGroup(props) {\n  const { colorScheme, size, variant, children, isDisabled } = props;\n  const { value, onChange } = useCheckboxGroup(props);\n  const group = useMemo(() => ({\n    size,\n    onChange,\n    colorScheme,\n    value,\n    variant,\n    isDisabled\n  }), [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /* @__PURE__ */ React.createElement(CheckboxGroupProvider, {\n    value: group,\n    children\n  });\n}\nCheckboxGroup.displayName = \"CheckboxGroup\";\n\n// src/checkbox-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nvar MotionSvg = chakra(motion.svg);\nfunction CheckIcon(props) {\n  return /* @__PURE__ */ React.createElement(MotionSvg, {\n    width: \"1.2em\",\n    viewBox: \"0 0 12 10\",\n    variants: {\n      unchecked: {\n        opacity: 0,\n        strokeDashoffset: 16\n      },\n      checked: {\n        opacity: 1,\n        strokeDashoffset: 0,\n        transition: { duration: 0.2 }\n      }\n    },\n    style: {\n      fill: \"none\",\n      strokeWidth: 2,\n      stroke: \"currentColor\",\n      strokeDasharray: 16\n    },\n    ...props\n  }, /* @__PURE__ */ React.createElement(\"polyline\", {\n    points: \"1.5 6 4.5 9 10.5 1\"\n  }));\n}\nfunction IndeterminateIcon(props) {\n  return /* @__PURE__ */ React.createElement(MotionSvg, {\n    width: \"1.2em\",\n    viewBox: \"0 0 24 24\",\n    variants: {\n      unchecked: {\n        scaleX: 0.65,\n        opacity: 0\n      },\n      checked: {\n        scaleX: 1,\n        opacity: 1,\n        transition: {\n          scaleX: { duration: 0 },\n          opacity: { duration: 0.02 }\n        }\n      }\n    },\n    style: { stroke: \"currentColor\", strokeWidth: 4 },\n    ...props\n  }, /* @__PURE__ */ React.createElement(\"line\", {\n    x1: \"21\",\n    x2: \"3\",\n    y1: \"12\",\n    y2: \"12\"\n  }));\n}\nfunction CheckboxTransition({ open, children }) {\n  return /* @__PURE__ */ React.createElement(AnimatePresence, {\n    initial: false\n  }, open && /* @__PURE__ */ React.createElement(motion.div, {\n    variants: {\n      unchecked: { scale: 0.5 },\n      checked: { scale: 1 }\n    },\n    initial: \"unchecked\",\n    animate: \"checked\",\n    exit: \"unchecked\",\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    }\n  }, children));\n}\nfunction CheckboxIcon(props) {\n  const { isIndeterminate, isChecked, ...rest } = props;\n  const BaseIcon = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return /* @__PURE__ */ React.createElement(CheckboxTransition, {\n    open: isChecked || isIndeterminate\n  }, /* @__PURE__ */ React.createElement(BaseIcon, {\n    ...rest\n  }));\n}\n\n// src/checkbox.tsx\nimport {\n  chakra as chakra2,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cloneElement, useMemo as useMemo2 } from \"react\";\n\n// src/use-checkbox.ts\nimport { useFormControlProps } from \"@chakra-ui/form-control\";\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { useCallbackRef as useCallbackRef2 } from \"@chakra-ui/react-use-callback-ref\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone)\n      delete clone[key];\n  }\n  return clone;\n}\n\n// src/use-checkbox.ts\nimport { visuallyHiddenStyle } from \"@chakra-ui/visually-hidden\";\nimport { trackFocusVisible } from \"@zag-js/focus-visible\";\nimport { useCallback as useCallback2, useEffect, useRef, useState } from \"react\";\nfunction useCheckbox(props = {}) {\n  const formControlProps = useFormControlProps(props);\n  const {\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    isInvalid,\n    id,\n    onBlur,\n    onFocus,\n    \"aria-describedby\": ariaDescribedBy\n  } = formControlProps;\n  const {\n    defaultChecked,\n    isChecked: checkedProp,\n    isFocusable,\n    onChange,\n    isIndeterminate,\n    name,\n    value,\n    tabIndex = void 0,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-invalid\": ariaInvalid,\n    ...rest\n  } = props;\n  const htmlProps = omit(rest, [\n    \"isDisabled\",\n    \"isReadOnly\",\n    \"isRequired\",\n    \"isInvalid\",\n    \"id\",\n    \"onBlur\",\n    \"onFocus\",\n    \"aria-describedby\"\n  ]);\n  const onChangeProp = useCallbackRef2(onChange);\n  const onBlurProp = useCallbackRef2(onBlur);\n  const onFocusProp = useCallbackRef2(onFocus);\n  const [isFocusVisible, setIsFocusVisible] = useState(false);\n  const [isFocused, setFocused] = useState(false);\n  const [isHovered, setHovered] = useState(false);\n  const [isActive, setActive] = useState(false);\n  useEffect(() => {\n    return trackFocusVisible(setIsFocusVisible);\n  }, []);\n  const inputRef = useRef(null);\n  const [rootIsLabelElement, setRootIsLabelElement] = useState(true);\n  const [checkedState, setCheckedState] = useState(!!defaultChecked);\n  const isControlled = checkedProp !== void 0;\n  const isChecked = isControlled ? checkedProp : checkedState;\n  const handleChange = useCallback2((event) => {\n    if (isReadOnly || isDisabled) {\n      event.preventDefault();\n      return;\n    }\n    if (!isControlled) {\n      if (isChecked) {\n        setCheckedState(event.target.checked);\n      } else {\n        setCheckedState(isIndeterminate ? true : event.target.checked);\n      }\n    }\n    onChangeProp == null ? void 0 : onChangeProp(event);\n  }, [\n    isReadOnly,\n    isDisabled,\n    isChecked,\n    isControlled,\n    isIndeterminate,\n    onChangeProp\n  ]);\n  useSafeLayoutEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  useUpdateEffect(() => {\n    if (isDisabled) {\n      setFocused(false);\n    }\n  }, [isDisabled, setFocused]);\n  useSafeLayoutEffect(() => {\n    const el = inputRef.current;\n    if (!(el == null ? void 0 : el.form))\n      return;\n    el.form.onreset = () => {\n      setCheckedState(!!defaultChecked);\n    };\n  }, []);\n  const trulyDisabled = isDisabled && !isFocusable;\n  const onKeyDown = useCallback2((event) => {\n    if (event.key === \" \") {\n      setActive(true);\n    }\n  }, [setActive]);\n  const onKeyUp = useCallback2((event) => {\n    if (event.key === \" \") {\n      setActive(false);\n    }\n  }, [setActive]);\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current)\n      return;\n    const notInSync = inputRef.current.checked !== isChecked;\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  const getCheckboxProps = useCallback2((props2 = {}, forwardedRef = null) => {\n    const onPressDown = (event) => {\n      if (isFocused) {\n        event.preventDefault();\n      }\n      setActive(true);\n    };\n    return {\n      ...props2,\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props2.onMouseDown, onPressDown),\n      onMouseUp: callAllHandlers(props2.onMouseUp, () => setActive(false)),\n      onMouseEnter: callAllHandlers(props2.onMouseEnter, () => setHovered(true)),\n      onMouseLeave: callAllHandlers(props2.onMouseLeave, () => setHovered(false))\n    };\n  }, [\n    isActive,\n    isChecked,\n    isDisabled,\n    isFocused,\n    isFocusVisible,\n    isHovered,\n    isIndeterminate,\n    isInvalid,\n    isReadOnly\n  ]);\n  const getRootProps = useCallback2((props2 = {}, forwardedRef = null) => ({\n    ...htmlProps,\n    ...props2,\n    ref: mergeRefs(forwardedRef, (node) => {\n      if (!node)\n        return;\n      setRootIsLabelElement(node.tagName === \"LABEL\");\n    }),\n    onClick: callAllHandlers(props2.onClick, () => {\n      var _a;\n      if (!rootIsLabelElement) {\n        (_a = inputRef.current) == null ? void 0 : _a.click();\n        requestAnimationFrame(() => {\n          var _a2;\n          (_a2 = inputRef.current) == null ? void 0 : _a2.focus();\n        });\n      }\n    }),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  }), [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]);\n  const getInputProps = useCallback2((props2 = {}, forwardedRef = null) => {\n    return {\n      ...props2,\n      ref: mergeRefs(inputRef, forwardedRef),\n      type: \"checkbox\",\n      name,\n      value,\n      id,\n      tabIndex,\n      onChange: callAllHandlers(props2.onChange, handleChange),\n      onBlur: callAllHandlers(props2.onBlur, onBlurProp, () => setFocused(false)),\n      onFocus: callAllHandlers(props2.onFocus, onFocusProp, () => setFocused(true)),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onKeyUp: callAllHandlers(props2.onKeyUp, onKeyUp),\n      required: isRequired,\n      checked: isChecked,\n      disabled: trulyDisabled,\n      readOnly: isReadOnly,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-disabled\": isDisabled,\n      style: visuallyHiddenStyle\n    };\n  }, [\n    name,\n    value,\n    id,\n    handleChange,\n    onBlurProp,\n    onFocusProp,\n    onKeyDown,\n    onKeyUp,\n    isRequired,\n    isChecked,\n    trulyDisabled,\n    isReadOnly,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaInvalid,\n    isInvalid,\n    ariaDescribedBy,\n    isDisabled,\n    tabIndex\n  ]);\n  const getLabelProps = useCallback2((props2 = {}, forwardedRef = null) => ({\n    ...props2,\n    ref: forwardedRef,\n    onMouseDown: callAllHandlers(props2.onMouseDown, stopEvent),\n    onTouchStart: callAllHandlers(props2.onTouchStart, stopEvent),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  }), [isChecked, isDisabled, isInvalid]);\n  const state = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isIndeterminate,\n    isDisabled,\n    isReadOnly,\n    isRequired\n  };\n  return {\n    state,\n    getRootProps,\n    getCheckboxProps,\n    getInputProps,\n    getLabelProps,\n    htmlProps\n  };\n}\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\n// src/checkbox.tsx\nvar controlStyles = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0\n};\nvar rootStyles = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\"\n};\nvar Checkbox = forwardRef(function Checkbox2(props, ref) {\n  const group = useCheckboxGroupContext();\n  const mergedProps = { ...group, ...props };\n  const styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  const ownProps = omitThemingProps(props);\n  const {\n    spacing = \"0.5rem\",\n    className,\n    children,\n    iconColor,\n    iconSize,\n    icon = /* @__PURE__ */ React.createElement(CheckboxIcon, null),\n    isChecked: isCheckedProp,\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    onChange: onChangeProp,\n    inputProps,\n    ...rest\n  } = ownProps;\n  let isChecked = isCheckedProp;\n  if ((group == null ? void 0 : group.value) && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n  let onChange = onChangeProp;\n  if ((group == null ? void 0 : group.onChange) && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    getRootProps\n  } = useCheckbox({\n    ...rest,\n    isDisabled,\n    isChecked,\n    onChange\n  });\n  const iconStyles = useMemo2(() => ({\n    opacity: state.isChecked || state.isIndeterminate ? 1 : 0,\n    transform: state.isChecked || state.isIndeterminate ? \"scale(1)\" : \"scale(0.95)\",\n    fontSize: iconSize,\n    color: iconColor,\n    ...styles.icon\n  }), [iconColor, iconSize, state.isChecked, state.isIndeterminate, styles.icon]);\n  const clonedIcon = cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /* @__PURE__ */ React.createElement(chakra2.label, {\n    __css: { ...rootStyles, ...styles.container },\n    className: cx(\"chakra-checkbox\", className),\n    ...getRootProps()\n  }, /* @__PURE__ */ React.createElement(\"input\", {\n    className: \"chakra-checkbox__input\",\n    ...getInputProps(inputProps, ref)\n  }), /* @__PURE__ */ React.createElement(chakra2.span, {\n    __css: { ...controlStyles, ...styles.control },\n    className: \"chakra-checkbox__control\",\n    ...getCheckboxProps()\n  }, clonedIcon), children && /* @__PURE__ */ React.createElement(chakra2.span, {\n    className: \"chakra-checkbox__label\",\n    ...getLabelProps(),\n    __css: {\n      marginStart: spacing,\n      ...styles.label\n    }\n  }, children));\n});\nCheckbox.displayName = \"Checkbox\";\nexport {\n  Checkbox,\n  CheckboxGroup,\n  CheckboxIcon,\n  useCheckbox,\n  useCheckboxGroup\n};\n","// src/index.ts\nimport { useMemo, useState } from \"react\";\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nfunction useControllableProp(prop, state) {\n  const controlled = typeof prop !== \"undefined\";\n  const value = controlled ? prop : state;\n  return useMemo(() => [controlled, value], [controlled, value]);\n}\nfunction useControllableState(props) {\n  const {\n    value: valueProp,\n    defaultValue,\n    onChange,\n    shouldUpdate = (prev, next) => prev !== next\n  } = props;\n  const onChangeProp = useCallbackRef(onChange);\n  const shouldUpdateProp = useCallbackRef(shouldUpdate);\n  const [uncontrolledState, setUncontrolledState] = useState(defaultValue);\n  const controlled = valueProp !== void 0;\n  const value = controlled ? valueProp : uncontrolledState;\n  const setValue = useCallbackRef((next) => {\n    const setter = next;\n    const nextValue = typeof next === \"function\" ? setter(value) : next;\n    if (!shouldUpdateProp(value, nextValue)) {\n      return;\n    }\n    if (!controlled) {\n      setUncontrolledState(nextValue);\n    }\n    onChangeProp(nextValue);\n  }, [controlled, onChangeProp, value, shouldUpdateProp]);\n  return [value, setValue];\n}\nexport {\n  useControllableProp,\n  useControllableState\n};\n"],"names":["visuallyHiddenStyle","border","clip","height","width","margin","padding","overflow","whiteSpace","position","VisuallyHidden","chakra","baseStyle","displayName","hasSetup","modality","hasEventBeforeFocus","handlers","Set","isMac","window","navigator","test","platform","trigger","modality2","event","forEach","handler","onKeyboardEvent","metaKey","altKey","ctrlKey","isValidKey","onPointerEvent","type","onWindowFocus","target","document","onWindowBlur","isFocusVisible","trackFocusVisible","fn","focus","HTMLElement","prototype","args","apply","this","addEventListener","PointerEvent","setupGlobalFocusEvents","add","delete","createContext","name","strict","useCheckboxGroupContext","cx","classNames","filter","Boolean","join","dataAttr","condition","callAllHandlers","fns","some","defaultPrevented","MotionSvg","motion","CheckIcon","props","React","viewBox","variants","unchecked","opacity","strokeDashoffset","checked","transition","duration","style","fill","strokeWidth","stroke","strokeDasharray","points","IndeterminateIcon","scaleX","x1","x2","y1","y2","CheckboxTransition","open","children","AnimatePresence","initial","scale","animate","exit","display","alignItems","justifyContent","CheckboxIcon","isIndeterminate","isChecked","rest","BaseIcon","omit","object","keysToOmit","clone","Object","assign","key","stopEvent","preventDefault","stopPropagation","controlStyles","verticalAlign","userSelect","flexShrink","rootStyles","cursor","Checkbox","forwardRef","ref","group","mergedProps","styles","useMultiStyleConfig","ownProps","omitThemingProps","spacing","className","iconColor","iconSize","icon","isCheckedProp","isDisabled","onChangeProp","onChange","inputProps","value","includes","arg","callAll","formControlProps","useFormControlProps","isReadOnly","isRequired","isInvalid","id","onBlur","onFocus","ariaDescribedBy","defaultChecked","checkedProp","isFocusable","tabIndex","ariaLabel","ariaLabelledBy","ariaInvalid","htmlProps","useCallbackRef2","onBlurProp","onFocusProp","useState","setIsFocusVisible","isFocused","setFocused","isHovered","setHovered","isActive","setActive","useEffect","inputRef","useRef","rootIsLabelElement","setRootIsLabelElement","checkedState","setCheckedState","isControlled","handleChange","useCallback2","useSafeLayoutEffect","current","indeterminate","useUpdateEffect","el","form","onreset","trulyDisabled","onKeyDown","onKeyUp","getCheckboxProps","props2","forwardedRef","onPressDown","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","getRootProps","mergeRefs","node","tagName","onClick","_a","click","requestAnimationFrame","_a2","getInputProps","required","disabled","readOnly","getLabelProps","onTouchStart","state","useCheckbox","iconStyles","useMemo2","transform","fontSize","color","clonedIcon","cloneElement","__css","chakra2","container","control","marginStart","label","useControllableState","valueProp","defaultValue","shouldUpdate","prev","next","useCallbackRef","shouldUpdateProp","uncontrolledState","setUncontrolledState","controlled","setValue","nextValue"],"sourceRoot":""}