{"version":3,"file":"static/js/360.07016143.chunk.js","mappings":"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","sources":["components/main/Sidebar/SidebarPrimaryHeading.js","components/main/Sidebar/SidebarSecondaryHeading.js","components/main/Sidebar/ProductSidebarDesktop.js","components/main/Sidebar/SidebarMobileCategoryHeading.js","components/main/Sidebar/ProductSidebarMobile.js","components/main/Sidebar/ProductsSidebar.js","components/main/Products/ProductContainerCard.js","components/main/Products/ProductContainer.js","pages/ProductFilterPage.js"],"sourcesContent":["import React from \"react\";\nimport { NavLink as RouterLink } from \"react-router-dom\";\n\n//CSS\nimport { Link, Box } from \"@chakra-ui/react\";\n\nfunction SidebarPrimaryHeading(props) {\n  return (\n    <Link\n      as={RouterLink}\n      to={props.to}\n      onClick={props.action}\n      // _activeLink={{\n      //   fontWeight: \"bold\",\n      //   textDecoration: \"underline\",\n      //   transform: \"scale(1.15)\",\n      //   color: \"#DCDCDC\",\n      // }}\n    >\n      <Box as=\"li\" fontSize={\"1.2rem\"} key={props.id} fontWeight={\"extrabold\"}>\n        {props.text}\n        <Box fontWeight={\"normal\"}>{props.children}</Box>\n      </Box>\n    </Link>\n  );\n}\n\nexport default SidebarPrimaryHeading;\n","import React from \"react\";\nimport { NavLink as RouterLink } from \"react-router-dom\";\n\n// CSS\nimport { Box, Link } from \"@chakra-ui/react\";\n\nfunction SidebarSecondaryHeading(props) {\n  return (\n    <Link\n      as={RouterLink}\n      to={props.to}\n      _activeLink={{\n        fontWeight: \"bold\",\n        textDecoration: \"underline\",\n        transform: \"scale(1.15)\",\n        color: \"#DCDCDC\",\n      }}\n      onClick={props.action}\n    >\n      <Box\n        as=\"li\"\n        mx={2}\n        size=\"md\"\n        key={props.id}\n        _hover={{\n          border: \"3px dotted #ff7a59\",\n          color: \"#ff7a59\",\n          background: \"#fff\",\n          textDecoration: \"none\",\n        }}\n        cursor={\"pointer\"}\n      >\n        {props.children}\n      </Box>\n    </Link>\n  );\n}\n\nexport default SidebarSecondaryHeading;\n","import React from \"react\";\n// redux\nimport { useSelector } from \"react-redux\";\n\n// Components\nimport SidebarPrimaryHeading from \"./SidebarPrimaryHeading\";\nimport SidebarSecondaryHeading from \"./SidebarSecondaryHeading\";\n\n// Redux\nimport { getAllCategories } from \"../../../store/products-slice\";\n\n// CSS\nimport { Heading, UnorderedList, VStack, Box, Flex } from \"@chakra-ui/react\";\nimport { useParams } from \"react-router-dom\";\n\nfunction ProductSidebarDesktop() {\n  const reduxCategory = useSelector(getAllCategories);\n  const params = useParams();\n\n  return (\n    <VStack w={\"256px\"} alignItems={\"flex-start\"}>\n      <Flex my={18} alignItems={\"flex-start\"} flexDir=\"column\">\n        <Heading as=\"h3\" size=\"md\" textAlign={\"left\"} w={\"full\"}>\n          Shop/\n        </Heading>\n        <Heading\n          as={\"h3\"}\n          size=\"lg\"\n          textAlign=\"center\"\n          w={\"full\"}\n          textTransform={\"capitalize\"}\n        >\n          {params.categoryId\n            ? params.subcategoryId\n              ? params.subcategoryId\n              : params.categoryId\n            : \"All Products\"}\n        </Heading>\n      </Flex>\n\n      <UnorderedList w={\"160px\"} listStyleType=\"none\">\n        {reduxCategory.map((item) => (\n          <Box key={item.categoryId}>\n            <SidebarPrimaryHeading\n              as=\"li\"\n              key={item.categoryId}\n              textColor=\"black\"\n              w={\"full\"}\n              text={item.category}\n              to={`/products/${item.category.toLowerCase()}`}\n            />\n            <UnorderedList\n              // key={item.categoryId}\n              listStyleType={\"none\"}\n              m={0}\n              p={0}\n            >\n              {item.subcategories.map((subItem) => (\n                <SidebarSecondaryHeading\n                  key={subItem.subcategoryId}\n                  id={subItem.subcategoryId}\n                  to={`/products/${item.category.toLowerCase()}/${subItem.subcategory.toLowerCase()}`}\n                >\n                  {subItem.subcategory}\n                </SidebarSecondaryHeading>\n              ))}\n            </UnorderedList>\n          </Box>\n        ))}\n        <SidebarPrimaryHeading text=\"View All\" to={\"/products/\"} />\n      </UnorderedList>\n    </VStack>\n  );\n}\n\nexport default ProductSidebarDesktop;\n","import React from \"react\";\nimport { NavLink as RouterLink } from \"react-router-dom\";\n\n// CSS\nimport { MenuItem, Link } from \"@chakra-ui/react\";\n\nfunction SidebarMobileCategoryHeading(props) {\n  return (\n    <Link as={RouterLink} to={props.to}>\n      <MenuItem fontWeight={\"bold\"} key={props.id}>\n        {props.children}\n      </MenuItem>\n    </Link>\n  );\n}\n\nexport default SidebarMobileCategoryHeading;\n","import React from \"react\";\nimport { NavLink as RouterLink } from \"react-router-dom\";\n\n// Components\nimport SidebarMobileCategoryHeading from \"./SidebarMobileCategoryHeading\";\n// import SidebarMobileSubcategoryHeading from \"./Sidebar/SidebarMobileSubcategoryHeading\";\n\n//Redux\nimport { useSelector } from \"react-redux\";\n// import { useParams } from \"react-router-dom\";\n\n// CSS\nimport {\n  MenuButton,\n  Menu,\n  MenuList,\n  Button,\n  MenuItem,\n  Link,\n} from \"@chakra-ui/react\";\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\n\n// Data\nimport { getAllCategories } from \"../../../store/products-slice\";\n\nfunction ProductSidebarMobile() {\n  const reduxCategory = useSelector(getAllCategories);\n\n  // DOES NOT INCLUDE SUBCATEGORIES\n  return (\n    <Menu w={\"full\"}>\n      <MenuButton\n        as={Button}\n        rightIcon={<ChevronDownIcon />}\n        w={\"50%\"}\n        colorScheme=\"blue\"\n      >\n        Options\n      </MenuButton>\n      <MenuList w={\"100%\"}>\n        {reduxCategory.map((item) => (\n          <SidebarMobileCategoryHeading\n            key={item.categoryId}\n            id={item.categoryId}\n            to={`/products/${item.category.toLowerCase()}`}\n          >\n            {item.category}\n          </SidebarMobileCategoryHeading>\n        ))}\n        <Link to=\"/products\" as={RouterLink}>\n          <MenuItem fontWeight={\"bold\"}>View All</MenuItem>\n        </Link>\n      </MenuList>\n    </Menu>\n  );\n}\n\nexport default ProductSidebarMobile;\n","import React, { Fragment } from \"react\";\n\n// Components\nimport ProductSidebarDesktop from \"./ProductSidebarDesktop\";\nimport ProductSidebarMobile from \"./ProductSidebarMobile\";\n\n// CSS\nimport { Flex } from \"@chakra-ui/react\";\n\nfunction ProductsSidebar() {\n  // How to get the currently selected? Maybe the URL???\n\n  return (\n    <Fragment>\n      {/* Desktop */}\n      <Flex\n        display={[\"none\", \"flex\", \"flex\"]}\n        h=\"full\"\n        position={\"fixed\"}\n        my={\"7rem\"}\n        mx={\"2rem\"}\n        alignItems=\"center\"\n        flexDir=\"column\"\n      >\n        <ProductSidebarDesktop />\n      </Flex>\n\n      {/* {Mobile} */}\n      <Flex\n        display={[\"flex\", \"none\", \"none\"]}\n        w=\"full\"\n        justifyContent={\"center\"}\n      >\n        <ProductSidebarMobile />\n      </Flex>\n    </Fragment>\n  );\n}\n\nexport default ProductsSidebar;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { Link as RouteLink } from \"react-router-dom\";\n\n// Redux\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { favoritesActions } from \"../../../store/favorites-slice\";\n\n// Router\nimport { useParams } from \"react-router-dom\";\n\nimport { getAllProducts } from \"../../../store/products-slice\";\n\n// CSS\nimport {\n  Flex,\n  Circle,\n  Box,\n  Image,\n  Badge,\n  Icon,\n  Link,\n  Tooltip,\n} from \"@chakra-ui/react\";\n\nimport { AiOutlineHeart, AiFillHeart } from \"react-icons/ai\";\n\nfunction ProductContainerCard(props) {\n  const products = useSelector(getAllProducts);\n  const params = useParams();\n  const [filteredData, setFilteredData] = useState([]);\n  const [sortFilter, setSortFilter] = useState({});\n  const dispatch = useDispatch();\n  const favoritesData = useSelector((state) => state.favorites);\n\n  useEffect(() => {\n    const data = products.filter((item) => {\n      if (sortFilter.scenario === 2) {\n        return item.category.toLowerCase() === sortFilter.categoryId;\n      } else if (sortFilter.scenario === 3) {\n        return (\n          String(item.subcategory.toLowerCase()) === sortFilter.subcategoryId\n        );\n      } else {\n        return products;\n      }\n    });\n    setFilteredData(data);\n  }, [sortFilter, products]);\n\n  // Getting filters I can remove the productId filter\n  useEffect(() => {\n    if (params.productId) {\n      setSortFilter({\n        scenario: 4,\n        subcategoryId: params.subcategoryId,\n        productId: params.productId,\n        categoryId: params.categoryId,\n        allProducts: false,\n      });\n    } else if (params.subcategoryId && params.categoryId) {\n      setSortFilter({\n        scenario: 3,\n        subcategoryId: params.subcategoryId,\n        productId: null,\n        categoryId: params.categoryId,\n        allProducts: false,\n      });\n    } else if (params.categoryId) {\n      setSortFilter({\n        scenario: 2,\n        productId: null,\n        categoryId: params.categoryId,\n        allProducts: false,\n        subcategoryId: null,\n      });\n    } else {\n      setSortFilter({\n        scenario: 1,\n        subcategoryId: null,\n        productId: null,\n        categoryId: null,\n        allProducts: true,\n      });\n    }\n  }, [params]);\n\n  return (\n    <Fragment>\n      <Flex wrap={\"wrap\"} ml={6} mt={6}>\n        {filteredData.map((item) => (\n          <Flex\n            p={4}\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            key={item.productDetails.productId}\n          >\n            {/* w='full' I removed this */}\n            <Box\n              bg={\"white\"}\n              w=\"19rem\" // originally was sm\n              h={\"32rem\"} // NEW ADD HAD NO HEIGHT\n              borderWidth=\"1px\"\n              rounded=\"lg\"\n              shadow=\"lg\"\n              position=\"relative\"\n            >\n              {item.productDetails.newAdd && (\n                <Circle\n                  size=\"10px\"\n                  position=\"absolute\"\n                  top={2}\n                  right={2}\n                  bg=\"red.200\"\n                />\n              )}\n\n              <Image\n                src={item.productDetails.imageOne}\n                alt={`Picture of ${item.productDetails.productName}`}\n                roundedTop=\"lg\"\n                // ALL THESE ARE NEW BELOW\n                minWidth={\"18.9rem\"}\n                maxWidth={\"18.9rem\"}\n                minH={\"22rem\"}\n                maxH={\"22rem\"}\n              />\n\n              <Box p=\"6\">\n                <Box d=\"flex\" alignItems=\"baseline\">\n                  {item.productDetails.newAdd && (\n                    <Badge\n                      rounded=\"full\"\n                      px=\"2\"\n                      fontSize=\"0.8em\"\n                      colorScheme=\"red\"\n                    >\n                      New\n                    </Badge>\n                  )}\n                  {item.productDetails.newAdd && (\n                    <Badge\n                      rounded=\"full\"\n                      px=\"2\"\n                      fontSize=\"0.8em\"\n                      colorScheme=\"red\"\n                    ></Badge>\n                  )}\n                </Box>\n                <Flex\n                  mt=\"1\"\n                  justifyContent=\"space-between\"\n                  alignContent=\"center\"\n                >\n                  <Box\n                    fontSize=\"2xl\"\n                    fontWeight=\"semibold\"\n                    as=\"h4\"\n                    lineHeight=\"tight\"\n                    //   isTruncated\n                  >\n                    {item.productDetails.productName}\n                  </Box>\n\n                  {favoritesData.some((favItem) => {\n                    return (\n                      favItem.productDetails.productId ===\n                      item.productDetails.productId\n                    );\n                  }) ? (\n                    <Tooltip\n                      label=\"Remove from favorites\"\n                      bg=\"white\"\n                      placement={\"top\"}\n                      color={\"gray.800\"}\n                      fontSize={\"1.2em\"}\n                    >\n                      <Link\n                        display={\"flex\"}\n                        onClick={() =>\n                          dispatch(favoritesActions.removefromFavorites(item))\n                        }\n                      >\n                        <Icon\n                          as={AiFillHeart}\n                          color=\"#e31b23\"\n                          h={8}\n                          w={8}\n                          alignSelf={\"center\"}\n                        />\n                      </Link>\n                    </Tooltip>\n                  ) : (\n                    <Tooltip\n                      label=\"Add to favorites\"\n                      bg=\"white\"\n                      placement={\"top\"}\n                      color={\"gray.800\"}\n                      fontSize={\"1.2em\"}\n                    >\n                      <Link\n                        display={\"flex\"}\n                        onClick={() =>\n                          dispatch(favoritesActions.addtoFavorites(item))\n                        }\n                      >\n                        <Icon\n                          as={AiOutlineHeart}\n                          h={8}\n                          w={8}\n                          alignSelf={\"center\"}\n                        />\n                      </Link>\n                    </Tooltip>\n                  )}\n                </Flex>\n\n                <Flex justifyContent=\"space-between\" alignContent=\"center\">\n                  {/* <Rating rating={data.rating} numReviews={data.numReviews} /> */}\n                  <Box fontSize=\"2xl\" color={\"gray.800\"}>\n                    <Box as=\"span\" color={\"gray.600\"} fontSize=\"lg\">\n                      $\n                    </Box>\n                    {item.productDetails.price.toFixed(2)}\n                  </Box>\n                  <Link\n                    as={RouteLink}\n                    to={`/products/${item.category}/${item.subcategory}/${item.productDetails.productName}/details`}\n                  >\n                    <Box p={1}>See More</Box>\n                  </Link>\n                </Flex>\n              </Box>\n            </Box>\n          </Flex>\n        ))}\n      </Flex>\n    </Fragment>\n  );\n}\n\nexport default React.memo(ProductContainerCard);\n","import React, { Fragment, useEffect, useState } from \"react\";\n\n// Components\nimport ProductContainerCard from \"./ProductContainerCard\";\n\n// Redux\nimport { useDispatch } from \"react-redux\";\n\nimport { fetchProducts } from \"../../../store/products-slice\";\n\n// CSS\nimport { Spinner, Text, VStack, Center } from \"@chakra-ui/react\";\n\nfunction ProductContainer() {\n  const dispatch = useDispatch();\n  // const status = useSelector(getProductsStatus);\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    dispatch(fetchProducts()).then(() => setLoading(false));\n  }, [dispatch]);\n\n  return (\n    <Fragment>\n      {!isLoading && <ProductContainerCard />}\n      {isLoading && (\n        <Center>\n          <VStack>\n            <Spinner\n              thickness=\"4px\"\n              speed=\"0.65s\"\n              emptyColor=\"gray.200\"\n              color=\"blue.500\"\n              size=\"xl\"\n            />\n            <Text fontWeight={\"bold\"}>Loading...</Text>\n          </VStack>\n        </Center>\n      )}\n    </Fragment>\n  );\n}\n\nexport default ProductContainer;\n","import React, { Fragment } from \"react\";\n\n//Components\nimport ProductsSidebar from \"../components/main/Sidebar/ProductsSidebar\";\nimport ProductContainer from \"../components/main/Products/ProductContainer\";\n\n// CSS\nimport { Flex, Grid, GridItem } from \"@chakra-ui/react\";\n\nfunction ProductFilterPage() {\n  return (\n    <Fragment>\n      {/* Desktop View side-by-side */}\n      <Flex display={[\"none\", \"flex\", \"flex\"]}>\n        <Grid gridTemplateColumns={\"268px 1fr\"} gridTemplateRows={\"1fr\"}>\n          <GridItem\n            backgroundColor={\"#F8F8F8\"}\n            minH={\"100vh\"}\n            boxShadow={\"dark-lg\"}\n          >\n            <ProductsSidebar />\n          </GridItem>\n          <GridItem>\n            <ProductContainer />\n          </GridItem>\n        </Grid>\n      </Flex>\n      {/* Mobile View Up and Down */}\n      <Flex minW={\"full\"} display={[\"flex\", \"none\", \"none\"]} flexDir=\"column\">\n        <ProductsSidebar w=\"full\" />\n        <ProductContainer />\n      </Flex>\n    </Fragment>\n  );\n}\n\nexport default ProductFilterPage;\n"],"names":["props","as","RouterLink","to","onClick","action","fontSize","fontWeight","text","children","id","_activeLink","textDecoration","transform","color","mx","size","_hover","border","background","cursor","reduxCategory","useSelector","getAllCategories","params","useParams","w","alignItems","my","flexDir","textAlign","textTransform","categoryId","subcategoryId","listStyleType","map","item","textColor","category","toLowerCase","m","p","subcategories","subItem","subcategory","Button","rightIcon","colorScheme","Fragment","display","h","position","justifyContent","ProductContainerCard","products","getAllProducts","useState","filteredData","setFilteredData","sortFilter","setSortFilter","dispatch","useDispatch","favoritesData","state","favorites","useEffect","data","filter","scenario","String","productId","allProducts","wrap","ml","mt","bg","borderWidth","rounded","shadow","productDetails","newAdd","top","right","src","imageOne","alt","productName","roundedTop","minWidth","maxWidth","minH","maxH","d","px","alignContent","lineHeight","some","favItem","label","placement","favoritesActions","AiFillHeart","alignSelf","AiOutlineHeart","price","toFixed","RouteLink","React","isLoading","setLoading","fetchProducts","then","thickness","speed","emptyColor","gridTemplateColumns","gridTemplateRows","backgroundColor","boxShadow","minW"],"sourceRoot":""}