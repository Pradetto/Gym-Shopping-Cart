{"version":3,"file":"static/js/606.53525a3f.chunk.js","mappings":"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","sources":["pages/ContactPage.js"],"sourcesContent":["import {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormLabel,\n  Heading,\n  IconButton,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Link,\n  Stack,\n  Textarea,\n  Tooltip,\n  useClipboard,\n  VStack,\n  Text,\n} from \"@chakra-ui/react\";\nimport React, { Fragment, useState } from \"react\";\nimport { BsGithub, BsLinkedin, BsPerson, BsTwitter } from \"react-icons/bs\";\nimport { MdEmail, MdOutlineEmail } from \"react-icons/md\";\n\nconst CONFETTI_DARK = `url(\"https://coolwallpapers.me/picsup/5635383-fitness-wallpapers.jpg\")`;\n\nfunction ContactPage() {\n  const { hasCopied, onCopy } = useClipboard(\"pradetto5@gmail.com\");\n  const [submitted, setSubmitted] = useState(false);\n\n  return (\n    <Flex\n      align=\"center\"\n      justify=\"center\"\n      css={{\n        backgroundImage: CONFETTI_DARK,\n        backgroundAttachment: \"fixed\",\n        backgroundRepeat: \"no-repeat\",\n        width: \"100%\",\n        height: \"93vh\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"left\", // toggle this to center if I want the background image to drag\n      }}\n      id=\"contact\"\n    >\n      <Box\n        borderRadius=\"lg\"\n        m={{ base: 5, md: 16, lg: 10 }}\n        p={{ base: 5, lg: 16 }}\n      >\n        <Box>\n          <VStack spacing={{ base: 4, md: 8, lg: 20 }}>\n            <Heading\n              color=\"white\"\n              fontSize={{\n                base: \"4xl\",\n                md: \"5xl\",\n              }}\n            >\n              Get in Touch\n            </Heading>\n\n            <Stack\n              spacing={{ base: 4, md: 8, lg: 20 }}\n              direction={{ base: \"column\", md: \"row\" }}\n            >\n              <Stack\n                align=\"center\"\n                justify=\"space-around\"\n                direction={{ base: \"row\", md: \"column\" }}\n              >\n                <Tooltip\n                  label={hasCopied ? \"Email Copied!\" : \"Copy Email\"}\n                  closeOnClick={false}\n                  hasArrow\n                >\n                  <IconButton\n                    color=\"white\"\n                    aria-label=\"email\"\n                    variant=\"ghost\"\n                    size=\"lg\"\n                    fontSize=\"3xl\"\n                    icon={<MdEmail />}\n                    _hover={{\n                      bg: \"blue.500\",\n                    }}\n                    onClick={onCopy}\n                    isRound\n                  />\n                </Tooltip>\n\n                <Link href=\"https://github.com/Pradetto\">\n                  <IconButton\n                    color=\"white\"\n                    aria-label=\"github\"\n                    variant=\"ghost\"\n                    size=\"lg\"\n                    fontSize=\"3xl\"\n                    icon={<BsGithub />}\n                    _hover={{\n                      bg: \"blue.500\",\n                    }}\n                    isRound\n                  />\n                </Link>\n\n                <Link href=\"#NoTwitter Try LinkedIn\">\n                  <IconButton\n                    color=\"white\"\n                    aria-label=\"twitter\"\n                    variant=\"ghost\"\n                    size=\"lg\"\n                    icon={<BsTwitter size=\"28px\" />}\n                    _hover={{\n                      bg: \"blue.500\",\n                    }}\n                    isRound\n                  />\n                </Link>\n\n                <Link href=\"https://www.linkedin.com/in/michael-pradetto/\">\n                  <IconButton\n                    color=\"white\"\n                    aria-label=\"linkedin\"\n                    variant=\"ghost\"\n                    size=\"lg\"\n                    icon={<BsLinkedin size=\"28px\" />}\n                    _hover={{\n                      bg: \"blue.500\",\n                    }}\n                    isRound\n                  />\n                </Link>\n              </Stack>\n\n              <Box bg=\"white\" borderRadius=\"lg\" p={8} shadow=\"base\">\n                <VStack spacing={5}>\n                  <FormControl isRequired>\n                    <FormLabel>Name</FormLabel>\n\n                    <InputGroup>\n                      <InputLeftElement children={<BsPerson />} />\n                      <Input type=\"text\" name=\"name\" placeholder=\"Your Name\" />\n                    </InputGroup>\n                  </FormControl>\n\n                  <FormControl isRequired>\n                    <FormLabel>Email</FormLabel>\n\n                    <InputGroup>\n                      <InputLeftElement children={<MdOutlineEmail />} />\n                      <Input\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"Your Email\"\n                      />\n                    </InputGroup>\n                  </FormControl>\n\n                  <FormControl isRequired>\n                    <FormLabel>Message</FormLabel>\n\n                    <Textarea\n                      name=\"message\"\n                      placeholder=\"Your Message\"\n                      rows={6}\n                      resize=\"none\"\n                    />\n                  </FormControl>\n                  {!submitted && (\n                    <Button\n                      colorScheme=\"blue\"\n                      bg=\"blue.400\"\n                      color=\"white\"\n                      _hover={{\n                        bg: \"blue.500\",\n                      }}\n                      onClick={() => setSubmitted(true)}\n                    >\n                      Send Message\n                    </Button>\n                  )}\n                  {submitted && (\n                    <Fragment>\n                      <Text color=\"green\">\n                        Success. Thanks for reaching out!\n                      </Text>\n                      <Button\n                        colorScheme=\"gray\"\n                        bg=\"gray.400\"\n                        color=\"white\"\n                        _hover={{\n                          bg: \"gray.500\",\n                        }}\n                        onClick={() => setSubmitted(false)}\n                      >\n                        Submit again?\n                      </Button>\n                    </Fragment>\n                  )}\n                </VStack>\n              </Box>\n            </Stack>\n          </VStack>\n        </Box>\n      </Box>\n    </Flex>\n  );\n}\n\nexport default ContactPage;\n"],"names":["useClipboard","hasCopied","onCopy","useState","submitted","setSubmitted","align","justify","css","backgroundImage","backgroundAttachment","backgroundRepeat","width","height","backgroundSize","backgroundPosition","id","borderRadius","m","base","md","lg","p","spacing","color","fontSize","direction","label","closeOnClick","hasArrow","variant","size","icon","_hover","bg","onClick","isRound","href","shadow","isRequired","children","type","name","placeholder","rows","resize","colorScheme","Fragment"],"sourceRoot":""}